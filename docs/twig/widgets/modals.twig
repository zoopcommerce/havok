<h1>Modals</h1>

<p>For simple modals use the <code>w-modal</code> tag to create a <a href="/api/havok/widget/Modal.html">havok/widget/Modal</a> widget.</p>

<div class="bs-docs-example">
    <script>
        require(['dojo/on', 'dojo/dom', 'dijit/registry', 'dojo/domReady!'],
             function(on, dom, registry){
                  on(dom.byId('modalButton1'), 'click', function(){
                      var modal = registry.byId('modal1');
                          modal.show().then(function(){
                              var button = modal.get('button'),
                                  result = button;
                              if (button.innerHTML) result = button.innerHTML
                              dom.byId('modalButtonValue1').innerHTML = result;
                      })
                  })
             }
         )
    </script>
    <button class="btn" id="modalButton1">Show modal</button>
    <div class="well well-small">
        <p><b>button: </b><span id="modalButtonValue1"></span></p>
    </div>

    <w-modal class="hidden" id="modal1">
        <header>Modal Heading</header>
        <h4>Text in a modal</h4>
        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem.</p>

        <h4>Dropdown in a modal</h4>
        <p>This dropdown should trigger a dropdown on click:</p>
        <w-dropdown-toggle class="btn">
            dropdown <span class="caret"></span>
            <w-dropdown class="hidden">
                <a>Action</a>
                <a>Another action</a>
                <a>Something else here</a>
                <hr />
                <a>Separated link</a>
            </w-dropdown>
        </w-dropdown-toggle>

        <h4>Tooltips in a modal</h4>
        <p><w-tooltip title="Tooltip">This link</w-tooltip> and <w-tooltip title="Tooltip">that link</w-tooltip> should have tooltips on hover.</p>

        <hr>

        <h4>Overflowing text to show optional scrollbar</h4>
        <p>If the modal is too high for the viewport, a scrollbar on the window will appear.</p>
        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>
        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>
        <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>
        <p>Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.</p>
        <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor auctor.</p>
        <p>Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus auctor fringilla.</p>
    </w-modal>
</div>

<pre class="prettyprint linenums">
{% set modalExample1 %}
<w-modal>
    <header>Modal Heading</header>
    <h4>Text in a modal</h4>
    <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem.</p>

    <h4>Dropdown in a modal</h4>
    ...
</w-modal>{% endset %}{{modalExample1|e}}
</pre>

<h2>Custom footer</h2>

<p>Change the modal footer by using the <code>footer</code> tag. Button names and keys can also be set. (This modal can be closed with ctrl-y).</p>

<div class="bs-docs-example">
    <script>
        require(['dojo/on', 'dojo/dom', 'dijit/registry', 'dojo/domReady!'],
             function(on, dom, registry){
                  on(dom.byId('modalButton2'), 'click', function(){
                      var modal = registry.byId('modal2');
                          modal.show().then(function(){
                              var button = modal.get('button'),
                                  result = button;
                              if (button.innerHTML) result = button.innerHTML
                              dom.byId('modalButtonValue2').innerHTML = result;
                          })
                  })
             }
         )
    </script>
    <button class="btn" id="modalButton2">Show custom modal</button>
    <div class="well well-small">
        <p><b>button: </b><span id="modalButtonValue2"></span></p>
    </div>
    <w-modal id="modal2">
        <header>Custom Footer</header>
        <h4>Text in a modal</h4>
        <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem.</p>
        <footer>
            <button type="reset" class="btn">Something</button>
            <w-button type="reset" hottkey="ESCAPE">No Thanks</w-button>
            <w-button type="submit" class="btn-info" hotkey="ENTER; ctrl y">Yeah!</button>
        </footer>
    </w-modal>
</div>
<pre class="prettyprint linenums">
{% set modalExample2 %}
<w-modal id="modal2">
    <header>Modal with custom footer</header>
    <h4>Text in a modal</h4>
    <p>Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem.</p>
    <footer>
        <button type="reset" class="btn">Something</button>
        <w-button type="reset" hottkey="ESCAPE">No Thanks</w-button>
        <w-button type="submit" class="btn-info" hotkey="ENTER; ctrl y">Yeah!</button>
    </footer>
</w-modal>{% endset %}{{modalExample2|e}}
</pre>

<h2>Programatic Modal</h2>

<div class="bs-docs-example">
    <script>
        require(['dojo/on', 'dojo/dom', 'havok/widget/Modal', 'dojo/domReady!'],
            function(on, dom, Modal){
                on(dom.byId('modalButton3'), 'click', function(){
                    var modal = new Modal({
                            headerTemplate: 'Programatic Modal',
                            bodyTemplate: 'This is a programatic Modal',
                            footerTemplate: '<w-button type="submit" hotkey="ENTER">Nice</w-button>'
                        });
                    modal.startup();
                    modal.show().then(function(){
                        var button = modal.get('button'),
                            result = button;
                        if (button.innerHTML) result = button.innerHTML;
                        dom.byId('modalButtonValue3').innerHTML = result;
                    })
                })
            }
        )
    </script>
    <button class="btn" id="modalButton3">Show programatic modal</button>
    <div class="well well-small">
        <p><b>button: </b><span id="modalButtonValue3"></span></p>
    </div>
</div>
<pre class="prettyprint linenums">
{% set modalExample3 %}
require(['dojo/on', 'dojo/dom', 'havok/widget/Modal', 'dojo/domReady!'],
    function(on, dom, Modal){
        on(dom.byId('modalButton3'), 'click', function(){
            var modal = new Modal({
                    headerTemplate: 'Programatic Modal',
                    bodyTemplate: 'This is a programatic Modal',
                    footerTemplate: '<w-button type="submit" hotkey="ENTER">Nice</w-button>'
                });
            modal.startup();
            modal.show().then(function(){
                //Do something here after modal has closed
            })
        })
    }
){% endset %}{{modalExample3|e}}
</pre>
