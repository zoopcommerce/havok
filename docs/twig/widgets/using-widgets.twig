<h1>Using Widgets</h1>

<h2>Individual or complied</h2>
<p>As with all havok modules, widgets are all comply with the AMD specification. They may be loaded individually, built into your own compiled layer with the dojo build tool (or another build tool), or used from the compiled havok.js distributable.</p>

<h2>Declataive use</h2>
<p>All widgets can be defined declatively as valid HTML and then instantated with the havok parser.</p>

<p>To define declartively, use the havok custom tags, the <code>havok/parser/complete!</code> plugin:</p>
<pre class="prettyprint linenums">
{% set widgetExample1 %}
<script>
    require(['havok/parser/complete!'], function(){//do something here after widgets parsed})
</script>
<w-button>One widget button</w-button>{% endset %}{{widgetExample1|e}}
</pre>

<h3>Programatic use</h3>
<p>To define programatically, first create an instance, then add to the dom, and call `startup`:</p>

<pre class="prettyprint linenums">
{% set widgetExample2 %}
<script>
    require(['havok/widget/Button', 'dojo/dom', 'dojo/domReady!'], function(Button, dom){
        var button = new Button({text: 'One widget button'});
        dom.byId('button').appendChild(button.domNode);
        button.startup();
    })
</script>
<div id="button"></div>{% endset %}{{widgetExample2|e}}
</pre>

<h3>Leveraging the power of dojo</h3>
<p>Widgets are built on dojo's dijit framework, and so use the standard dijit lifecycle, templating, etc.</p>
