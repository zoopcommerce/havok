<h1>Less</h1>

<p class="lead">Bundle less with widgets for better OOP design</p>

<p>Use the <code>havok/less!</code>. AMD plugin to define and load the less files you need.</p>

<pre class="prettyprint linenums">
define([
    'havok/less!my/less/file.less'
],
function (){
    //my module code
});
</pre>

<h2>Config</h2>

<p>The less plugin takes an array of less files. The files are loaded and parsed client side, and the resulting css is inserted into the page. A rank can be used to control the order they are added to the page.</p>

<p>Less files can be added to the plugin in two ways. Firstly through <code>dojoConfig</code>. Eg:</p>

<pre class="prettyprint linenums">
dojoConfig = {
    ...
    less: {
        "my/less/mixins.less": {defs: true},
        "my/less/file.less": {rank: 2},
        "another/less/file.less": {rank: 2}
    }
}
</pre>
<p>Secondly, less files can be added through the plugin. Less loaded this way will get a rank of 2 by default. eg:</p>
<pre class="prettyprint linenums">
define([
    'havok/less!my/less/file.less
],
function (){
    //my module code
});
</pre>

<p>To set the <code>defs</code> or <code>rank</code> when using the plugin, pass a json object:</p>
<pre class="prettyprint linenums">
define([
    'havok/less!my/less/file.less!{rank: 4}
],
function (){
    //my module code
});
</pre>


<h2>Defs and Rank</h2>

<p>The <code>defs</code> and <code>rank</code> control the order of less compilation an injection into the page. Any less marked with <code>defs: true</code> is considered to contain less definitions. Use this for less files that define variables and mixins.</p>

<p>Several <code>style</code> tags will be appended to the <code>body</code> of the page where compiled less will be injected. Less marked with <code>rank: 0</code> will be added to the first <code>style</code> tag. Less marked with <code>rank: 1</code> will be added to the second <code>style</code> tag, and so on.</p>

<h2>Builds</h2>
<p>Dynamically requiring less and compiling it client side is great for development - no intermediate steps, just edit your code and reload the browser. However, it is slow and inefficent for production. It is strongly recommended that you use the havok build tools to compile all less to css before deployment.</p>

<p>If you use the build tools, the following files will be created for each build layer:</p>

<ul>
    <li>myLayer.less</li>
    <li>myLayer.uncompressed.css</li>
    <li>myLayer.css</li>
</ul>

<p>When deploying an a layer, link the <code>myLayer.css</code> in your document body to completely bypass client side less compilation and greatly speed up load times.</p>
